#!/usr/bin/env ruby

#==============================================================
# CBRAIN Project
#
# Original author: Pierre Rioux
#

#
# CBRAIN patch that makes the server write the word 'STOPPED'
# to a status file when the server exits (whether it's properly
# or as a result of a failure to start).
#
# The path to the status file is provided by an environment
# variable, and usually this is setup by the cbrain_remote_ctl
# script.
#

server_status_file = ENV['CBRAIN_SERVER_STATUS_FILE']
#_cbrain_out = $stdout.dup # File.open("mlo","w")
if server_status_file && server_status_file =~ /^\//
  wrapper_pid = Process.pid
#_cbrain_out.puts "ZZZZ MAIN PID #{wrapper_pid}"
  Kernel.at_exit do
    if Process.pid == wrapper_pid
#_cbrain_out.puts "ZZZZ MAIN WAITING"
      Process.wait rescue nil
#_cbrain_out.puts "ZZZZ MAIN DONE WAITING"
    end
    current_pid        = Process.pid
    current_parent_pid = Process.ppid
    if current_pid != wrapper_pid && current_parent_pid != wrapper_pid # this code is only for the forked subprocess
      begin
#_cbrain_out.puts "ZZZZ REAL #{Process.pid} PARENT=#{current_parent_pid} WRITE STOP"
        File.open(server_status_file,"w") do |fh|
          fh.write "STOPPED\n"
        end
      rescue
        puts "Warning: can't write 'STOPPED' to status file '#{server_status_file}'.\n"
      end
    else
#_cbrain_out.puts "ZZZZ #{Process.pid} PARENT=#{current_parent_pid} IGNORES"
    end
  end
end

# End of CBRAIN patch
#==============================================================

load 'script/rails'

