<div class="menu_bar menu_bar_left">
   <%= overlay_ajax_link 'Create Project', new_group_path, :class => "button" %>
   <%= link_to "Switch Off Active Project", {:controller=>"groups", :action=>"switch", :id  => "off"}, :method  => :post, :class  => :button %>
   <span id="manage_filter_button">
     <% unless @filter_params["filter_hash"].blank? %>
       <%= button_with_dropdown_menu('Manage Filters') do %>
         <fieldset class="filter_sidebar">
           <legend>Active Filters</legend>
             <div id="current_filters">
               <ul class="filter_menu">
                   <% @filter_params["filter_hash"].each do |key, value| %>
                       <li>
                         <% if key == "type" %>
                            <%= crop_text_to(30, "Type:#{value.sub(/Group$/, "Project").titleize}") %><%= filter_remove_link delete_icon, key, :ajax => false %>
                         <% else %>
                            <%= crop_text_to(30, display_filter(:group, key, value, {:user  => :login})) %><%= filter_remove_link delete_icon, key, :ajax => false %>
                         <% end %>
                       </li>
                   <% end %>
               </ul>
             </div>
             <small>
               <%= filter_clear_link 'clear', :ajax => false %>
             </small>
         </fieldset>
       <% end %>
     <% end %>
   </span>
   <%= overlay_ajax_link "Help", "/doc/groups/groups_info.html", :class  => "button" %>       
</div>

<p>


<%=
  index_table(@groups, :class => "resource_list") do |t|
    t.describe_sort_column("Name", Group, "name") do |col|
      col.cell(:class => "left") { |g|  link_to_group_if_accessible g}
    end
    t.sort_column("Type", Group, "type", :filters => basic_filters_for(@header_scope, Group, :type) { |name| name.sub(/Group$/, "Project").underscore.titleize.sub(/group/i,"Project")}) do |g|        
      g.pretty_category_name(current_user)
    end
    t.sort_column("Site", Site, "name", :filters => association_filters_for(@header_scope, Group, :site)) { |g| link_to_site_if_accessible(g.site) }
    t.column("Users") { |g| @group_id_2_user_counts[g.id] || 0 }
    t.column("Files") do |g|
      if (@group_id_2_userfile_counts[g.id] || 0).to_i > 0
        filter_reset_link @group_id_2_userfile_counts[g.id], :controller => :userfiles, :filters  => {:group_id => g.id}, :ajax => false
      else
        0
      end
    end
    t.column("Tasks") do |g|
      if (@group_id_2_task_counts[g.id] || 0).to_i > 0
        filter_reset_link @group_id_2_task_counts[g.id], :controller => :tasks, :filters  => {:group_id => g.id}, :ajax => false
      else
        0
      end
    end
    if current_user.has_role?(:admin)
      t.column("Tools") do |g|
        if (@group_id_2_tool_counts[g.id] || 0).to_i > 0
          filter_reset_link @group_id_2_tool_counts[g.id], :controller => :tools, :filters  => {:group_id => g.id}, :ajax => false
        end
      end
      t.column("Data Providers") do |g|
        if (@group_id_2_data_provider_counts[g.id] || 0).to_i > 0
          filter_reset_link @group_id_2_data_provider_counts[g.id], :controller => :data_providers, :filters  => {:group_id => g.id}, :ajax => false
        end
      end
      t.column("Portal") do |g|
        if (@group_id_2_brain_portal_counts[g.id] || 0).to_i > 0
          filter_reset_link @group_id_2_brain_portal_counts[g.id], :controller => :bourreaux, :filters  => {:group_id => g.id, :type => "BrainPortal"}, :ajax => false
        end
      end
      t.column("Execution") do |g|
        if (@group_id_2_bourreau_counts[g.id] || 0).to_i > 0
          filter_reset_link @group_id_2_bourreau_counts[g.id], :controller => :bourreaux, :filters  => {:group_id => g.id, :type => "Bourreau"}, :ajax => false
        end
      end
    end
    t.describe_column("Operations") do |col|
      col.cell { |g| link_to 'Switch', {:action => :switch, :id => g.id}, :class => 'action_link', :method  => :post }
      col.edit_link   :if => Proc.new { |g| g.can_be_edited_by?(current_user) } 
      col.delete_link :if => Proc.new { |g| g.can_be_edited_by?(current_user) }
    end
  end
%>

