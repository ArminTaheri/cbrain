
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  
#
-%>

<% title 'Tabular Reports' %>

<% full_att_list =
            [
              [ 'Users',          'user_id' ],
              [ 'Projects',       'group_id' ],
              [ 'Data Providers', 'data_provider_id' ],
              [ 'Servers',        'bourreau_id' ],
              [ 'Status',         'status' ],
              [ 'Type',           'type' ],
              [ 'Site',           'site_id' ],
              [ 'Category',       'category' ],
              [ 'Tool',           'tool_id' ],
              [ 'City',           'city' ],
              [ 'Country',        'country' ],
            ]
   #restricted_att_list = @model_atts.blank? ? full_att_list : full_att_list.select { |pair| @model_atts.include?(pair[1].to_sym) }
   restricted_att_list = @model_atts.blank? ? [] : full_att_list.select { |pair| @model_atts.include?(pair[1].to_sym) }
   att_ok              = restricted_att_list.present?
   date_filtration     = params[:date_range] || {}
%>

<h2>Automatic Tabular Report Maker</h2>

<p class="medium_paragraphs">
This form allows you to generate many different kind of reports
in a tabular layout. Proceed as follow:
</p>

<ul>
  <li><strong>Select the type of report</strong> in the grey box. Most reports
      will count the number of objects accessible to you, but some of them
      will perform summation of some attributes.
  </li>
  <li><strong>Click on "Lookup columns and rows"</strong> and the form will be adjusted
      to show you which attributes you can select for the rows and columns of
      your table.
  </li>
  <li><strong>Select an attribute for the rows and columns</strong> using each of the selection
      boxes shown at the top and left of the table area.
  </li>
  <li><strong>Click on "Generate Report"</strong> and the table will be created with
      hot links to the appropriate index pages for your objects. You can
      modify the report's properties and regenerate it anew any time you want.
  </li>
</ul>
  

<%= form_tag( "/report" , :method => :get) do %>

<br>

<div class="display_cell centered">

<div class="notesbox" style="width: auto">
    <%= select_tag(:table_name,
          options_for_select(
            [
              [ '(Select the report type)',                    "",                                                  ],
              [ 'Files - count',                               Userfile.table_name                                  ],
              [ 'Files - sum of sizes',                        Userfile.table_name + ".sum(size)"                   ],
              [ 'Files - total files in collections',          Userfile.table_name + ".sum(num_files)"              ],
              [ 'Tasks - count',                               CbrainTask.table_name                                ],
              [ 'Tasks - sum of workdir space',                CbrainTask.table_name + ".sum(cluster_workdir_size)" ],
            ] + ((current_user.has_role?(:admin_user) || current_user.has_role?(:site_manager)) ? [
              [ 'Servers - count',                             RemoteResource.table_name                            ],
              [ 'Data Providers - count',                      DataProvider.table_name                              ],
              [ 'Users - count',                               User.table_name                                      ],
              [ 'Projects - count',                            Group.table_name                                     ],
              [ 'Tools - count',                               Tool.table_name                                      ],
              [ 'Tool Versions - count',                       ToolConfig.table_name                                ],
            ] : []),
            params[:table_name]
          )
        )
    %>
    <%= submit_tag('Lookup columns and rows') %>
</div>

<br>

<div>

  <div class="display_cell" style="vertical-align: middle">
    <p>
      <br>
      <br>
      <%= select_tag(:row_type, options_for_select( [ [ "(Select row type)", "" ] ] + restricted_att_list, params[:row_type] )) if att_ok %>&nbsp;&nbsp;
    </p>
  </div>

  <div class="display_cell">

    <div>
      <p>
        <%= select_tag(:col_type, options_for_select( [ [ "(Select column type)", "" ] ] + restricted_att_list, params[:col_type] )) if att_ok %>
      </p>
    </div>

    <% if @table_ok && @table_col_values.present? && @table_row_values.present? %>
      <%
         to_s_proc = Proc.new { |x| x.to_s.demodulize }
         col_proc = to_s_proc
         row_proc = to_s_proc
         if @filter_col_key =~ /^(\w+)_id$/
           col_model = Regexp.last_match[1].classify.constantize
           col_proc  = Proc.new { |x| link_to_model_if_accessible(col_model,x,:name,current_user) }
         end
         if @filter_row_key =~ /^(\w+)_id$/
           row_model = Regexp.last_match[1].classify.constantize
           row_proc  = Proc.new { |x| link_to_model_if_accessible(row_model,x,:name,current_user) }
         end
      %>

      <table>
        <tr>
        <th class="blank"></th>
          <% @table_col_values.each do |col_key| %>
            <th class="vertical_text_container"><div class="vertical_text"><%= col_key.nil? ? "(None)" : col_proc.call(col_key) %></div></th>
          <% end %>
        <th class="vertical_text_container"><div class="vertical_text">Total</div></th>
        </tr>

        <% total_total  = 0 %>
        <% total_of_col = {} %>
        <% @table_row_values.each do |row_key| %>
          <% total_of_row = 0 %>
          <tr>
          <th><%= row_key.nil? ? "(None)" : row_proc.call(row_key) %></th>
          <% @table_col_values.each do |col_key| %>
            <%
               total_of_col[col_key] ||= 0
               cell_value = @table_content[ [ row_key, col_key ] ]
               if cell_value.present?
                 total_of_row          += cell_value
                 total_of_col[col_key] += cell_value
                 total_total           += cell_value
               end
            %>
            <% pretty_cell_value = @filter_show_proc ? @filter_show_proc.call(cell_value) : cell_value %>
            <td><%= index_count_filter(cell_value, @filter_model, { @filter_row_key => row_key, @filter_col_key => col_key }, :name => pretty_cell_value) %></td>
          <% end %>
          <% pretty_row_tot = @filter_show_proc ? @filter_show_proc.call(total_of_row) : total_of_row %>
          <td><%= index_count_filter(total_of_row, @filter_model, { @filter_row_key => row_key }, :name => pretty_row_tot) %></td>
          </tr>
        <% end %>

        <tr>
          <th>Total</th>
          <% @table_col_values.each do |col_key| %>
            <% col_tot = total_of_col[col_key] %>
            <% pretty_col_tot = @filter_show_proc ? @filter_show_proc.call(col_tot) : col_tot %>
            <td><%= index_count_filter(col_tot, @filter_model, { @filter_col_key => col_key }, :name => pretty_col_tot) %></td>
          <% end %>
          <% pretty_tot_tot = @filter_show_proc ? @filter_show_proc.call(total_total) : total_total %>
          <td><%= index_count_filter(total_total, @filter_model, {}, :name => pretty_tot_tot) %></td>
        </tr>

      </table>

    <% elsif @table_ok %>
      <p class="groupentry">
      There are <%= html_colorize("no objects","red") %> found for this report.<br/>
      Try with other reporting parameters.
      </p>
    <% else %>
      <p class="groupentry">
      The report will appear here once you've selected<br/>
       the proper table content and types for the rows and columns.
      </p>
    <% end %>

  </div>

  <br>

  <% if @model_atts.present? && @model_atts.detect { |x| x.to_s =~ /user_id|group_id|data_provider_id|bourreau_id|type|status/ } %>
    <div class="notesbox" style="width: auto">

      <strong>Optional:</strong> fix some attributes:<p>

      <table class="simple">
      <tr><td>
      <% if @model_atts.include?(:user_id) %>
        <%= user_select          :user_id,          { :selector => params[:user_id] },                                  :include_blank => '(Any User)' %><br>
      <% end %>
      <% if @model_atts.include?(:group_id) %>
        <%= group_select         :group_id,         { :selector => params[:group_id] },                                 :include_blank => '(Any Project)' %><br>
      <% end %>
      <% if @model_atts.include?(:data_provider_id) %>
        <%= data_provider_select :data_provider_id, { :selector => params[:data_provider_id], :offline_is_ok => true }, :include_blank => '(Any Data Provider)' %><br>
      <% end %>
      <% if @model_atts.include?(:bourreau_id) %>
        <%= bourreau_select      :bourreau_id,      { :selector => params[:bourreau_id],      :offline_is_ok => true }, :include_blank => '(Any Server)' %><br>
      <% end %>
      <% if @model_atts.include?(:type) %>
        <% if @model <= Userfile %>
          <%= userfile_type_select(:type, {:selector => params[:type]} , :include_blank => '(Any Type)') %><br>
        <% elsif @model <= CbrainTask %>
          <%= task_type_select(:type, {:selector => params[:type]} , :include_blank => '(Any Type)') %><br>
        <% elsif @model <= Group %>
          <%= group_type_select(:type, {:selector => params[:type]} , :include_blank => '(Any Type)') %><br>
        <% else %>
          <%= select_tag :type, options_for_select( @model.descendants.map { |c| [ c.pretty_type, c.to_s ] }, params[:type] ), :include_blank => '(Any Type)' %><br>
        <% end%>
      <% end %>
      <% if @model_atts.include?(:status) %>
        <% if @model <= CbrainTask %>
          <%= task_status_select(:status, {:selector => params[:status]}, :include_blank => '(Any Status)') %><br>
        <% else %>
          <%= select_tag :status, options_for_select( ApplicationController.helpers.all_ordered_status, params[:status] ), :include_blank => '(Any Status)' %>
        <% end %>
      <% end %>
      
      </td>
      <td>
      <%= 
      render :partial => '/shared/date_range', :locals  => {:date_attribute            => ['date_range[date_attribute]',            date_filtration["date_attribute"]], 
                                                            :absolute_or_relative_from => ['date_range[absolute_or_relative_from]', date_filtration['absolute_or_relative_from']],
                                                            :absolute_or_relative_to   => ['date_range[absolute_or_relative_to]',   date_filtration['absolute_or_relative_to']],
                                                            :relative_from             => ['date_range[relative_from]',             date_filtration['relative_from']],
                                                            :relative_to               => ['date_range[relative_to]',               date_filtration['relative_to']],
                                                            :absolute_from             => ['date_range[absolute_from]',             date_filtration['absolute_from']],
                                                            :absolute_to               => ['date_range[absolute_to]',               date_filtration['absolute_to']]
                                                            }
      %>
      </td></tr>
      </table>
      </div>
      
    <br>
  <% end %>

  <% if @table_ok %>
    <%= submit_tag('Refresh Report') %>
  <% else %>
    <%= submit_tag('Generate Report') if att_ok %>
  <% end %>

</div>

</div>

<% end %>

