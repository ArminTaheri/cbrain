<%
#
# CBRAIN Project
#
# $Id$
#
-%>
   <div class = "infobox">

      <h3>Some Notes About Bourreau Configuration</h3>

      A Bourreau is a remote Rails application that is used by
      the BrainPortal. Like all Rails
      applications, it runs on some host somewhere, it listens
      to HTTP connections on some port and needs to connect to
      the same database server as the BrainPortal.

      <p>

      Unlike the BrainPortal,
      the HTTP connections it expects are not from a user's browser,
      but they are XML requests issued by the BrainPortal using a Rails
      protocol called ActiveResource. There are several ways that
      the BrainPortal can be told how to connect to and manage the Bourreau,
      which explains all the fields in this form.

      <p>
      <h4>Hardcoded DB and ActiveResource</h4>
      <p>

      In the most ordinary case, a Bourreau is installed and deployed
      manually by a CBRAIN administrator; this requires choosing
      the listen port (the <em>port</em> argument to its <em>script/server -p port</em>
      command when it's started) and creating its <em>database.yml</em> file. For such
      a manual installation, the only two required field in this form
      will be one in the box <strong>ActiveResource Configuration</strong>.
      Note that these two fields are completely ignored if the ActiveResource
      connection is being tunneled (see below).

      <p>
      <h4>Hardcoded, But With Remote Control</h4>
      <p>

      If the fields in the section <strong>SSH Remote Control Configuration</strong>
      are filled and describe the deployment remote account of the Bourreau, then
      the BrainPortal will have the ability to establish a persistent SSH master
      connection to that host and allow the administrator to start and stop the
      Bourreau right from the WEB interface. Note that the UNIX user under which the
      BrainPortal runs must have the proper SSH public keys for that remote account
      installed.

      <p>
      <h4>Remote Control And Optional Tunnels</h4>
      <p>

      It's possible the further deviate from the standard hardcoded Bourreau
      by having the BrainPortal set up SSH tunnels for either (or both) of
      the ActiveResource connection and the Database Server connection. This
      can be turned on by entering port numbers in the two fields in the section
      <strong>Tunneling Configuration</strong>. For this to work, the
      <strong>SSH Remote Control Configuration</strong> must be operational (see
      above). The port numbers specified here must both be public TCP port
      that are free on the Bourreau's host; they can be arbitrary numbers
      between 1024 and 65530, not used by other services.

      <p>

      <strong>Tunneling the ActiveResource connection:</strong> Entering a
      port number here will tell the BrainPortal to select this port
      for the Bourreau's Rails listening port (the <em>port</em> argument to
      its <em>script/server -p port</em> command when it's started). When
      starting the Bourreau using the interface, a SSH tunnel will be
      established between a local port (not shown here anywhere) on the
      BrainPortal side and the listening HTTP port of the Bourreau selected
      here. This means that the two fields in the form's section
      <strong>ActiveResource Configuration</strong> will be completely ignored.

      <p>

      <strong>Tunneling the DB server connection:</strong> Entering a port
      number here will tell the BrainPortal to select this port for
      the Bourreau's Rails DB connection; more accurately, by doing this,
      the BrainPortal will create from scratch a new <em>database.yml</em>
      file, send it over to the Bourreau side, and force it to use it. This
      <em>database.yml</em> will tell the Bourreau to connect to host 127.0.0.1
      on the port number specified here. This port will be configured to
      tunnel back to the BrainPortal all the way to the DB server used by the
      BrainPortal itself. Note that this can only work if the BrainPortal
      is connecting to its DB via a IP domain connection, not a file socket.
      For MySQL for instance, it means the BrainPortal's <em>database.yml</em>
      file must NOT have the value <em>localhost</em> for the <strong>Host</strong>
      field.

      <p>

      A side effect of tunneling the DB server is that any <em>database.yml</em> file
      already present on the Bourreau side will be backed up, and also that
      the newly created <em>database.yml</em> file will be DELETED after the Bourreau
      is started. This provides a high security context for the DB server's
      connection if there were no <em>database.yml</em> file at all. And if there
      were, and tunneling is disabled by blanking out the port field, then
      the backup <em>database.yml</em> will be restored.

   <div> <!-- End class="infobox" -->
