
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  
#
-%>

<% title @task.name + ' Task Information' %>

<% if @task.bourreau.online? %>

  <div class="menu_bar">

  <table class="simple">
    <tr>

    <!-- HOLD & RELEASE -->
    <% if @task.status == 'Queued' %>
      <td><%= button_to 'Hold Task', { :action => 'operation', :operation => 'hold', 'tasklist[]' => @task.id }, :class  => "button" %></td>
    <% end %>
    <% if @task.status == 'On Hold' %>
      <td><%= button_to 'Release Task', { :action => 'operation', :operation => 'release', 'tasklist[]' => @task.id }, :class  => "button" %></td>
    <% end %>

    <!-- SUSPEND & RESUME -->
    <% if @task.status == 'On CPU' %>
      <td><%= button_to 'Suspend Task', { :action => 'operation', :operation => 'suspend', 'tasklist[]' => @task.id }, :class  => "button" %></td>
    <% end %>
    <% if @task.status == 'Suspended' %>
      <td><%= button_to 'Resume Task', { :action => 'operation', :operation => 'resume', 'tasklist[]' => @task.id }, :class  => "button" %></td>
    <% end %>

    <!-- TERMINATE & REMOVE -->
    <% if @task.status =~ /Queued|On Hold|On CPU|Suspended/ %>
      <td><%= button_to 'Terminate Task', { :action => 'operation', :operation => 'terminate', 'tasklist[]' => @task.id }, :confirm => "Are you sure you want to terminate this task?", :class  => "button" %></td>
    <% end %>
    <% if @task.status =~ /New|Queued|On Hold|On CPU|Suspended|Failed.*|Completed/ %>
      <td><%= button_to 'Remove Task',  { :action => 'operation', :operation => 'delete', 'tasklist[]' => @task.id }, :confirm => "Are you sure you want to remove this task?", :class  => "button" %></td>
    <% end %>

    <!-- FAILURE RECOVERY -->
    <% if @task.status =~ /^Failed*/ %>
      <td><%= button_to 'Recover From Failure', { :action => 'operation', :operation => 'recover', 'tasklist[]' => @task.id }, :class  => "button" %></td>
    <% end %>

    <!-- RESTART -->
    <% if @task.status =~ /Completed|Terminated|Duplicated/ %>
      <td><%= button_to 'Restart At Setup', { :action => 'operation', :operation => 'restart_setup', 'tasklist[]' => @task.id }, :class  => "button" %></td>
    <% end %>
    <% if @task.status == 'Completed' %>
      <td><%= button_to 'Restart On Cluster', { :action => 'operation', :operation => 'restart_cluster', 'tasklist[]' => @task.id }, :class  => "button" %></td>
      <td><%= button_to 'Restart At PostProcessing', { :action => 'operation', :operation => 'restart_postprocess', 'tasklist[]' => @task.id }, :class  => "button" %></td>
    <% end %>
 
    <!-- REFRESH -->
    <% if @task.status =~ /Setting Up|Post Processing/ %>
      <td><%= link_to 'Refresh', { :action => 'show', :id => @task.id }, :class  => "button" %></td>
    <% end %>

    <!-- EDIT -->
    <% if (@task.status =~ /Completed|Failed|Duplicated|Terminated/) && (! @task.class.properties[:cannot_be_edited]) %>
      <td><%= link_to 'Edit Parameters', { :action => 'edit', :id => @task.id }, :class  => "button"  %></td>
    <% end %>

    </tr>
  </table>

  </div>
<% end %>


<%= error_messages_for :task, :header_message => "Task could not be updated." %>

<div class="display_inline_block" style="min-width: 50%">

  <%= show_table(@task) do |t| %>

    <% t.cell("Task Name") do %>
      <%= @task.name %><%= " (#{@task.pretty_name})" if @task.name != @task.pretty_name %>
    <% end %>
    <% t.cell("Task Description") { h(@task.description).gsub("\n", "<br>") } %>

    <% t.cell("Execution Server") { link_to_bourreau_if_accessible(@task.bourreau) }  %>
    <% t.cell("Owner") { link_to_user_with_tooltip(@task.user) } %>

    <% t.cell("Tool Version") do %>
      <% if current_user.has_role?(:admin) && @task.tool_config %>
        <%= link_to @task.tool_config.short_description, tool_config_path(@task.tool_config) %>
      <% else %>
        <%= @task.tool_config ? overlay_description(@task.tool_config.description) : "None" %>
      <% end %>
    <% end %>
    <% t.cell("Project") { link_to_group_if_accessible(@task.group) } %>

    <% t.cell("Current Status") { colored_status(@task.status) } %>
    <% t.cell("Time Submitted") { to_localtime(@task.created_at,:datetime) }%>

    <% t.attribute_cell(:run_number) %>
    <% t.cell("Last Updated") { to_localtime(@task.updated_at,:datetime) }%>

    <% t.cell("Data Provider For Results") { link_to_data_provider_if_accessible(@task.results_data_provider_id) } %>
    <% t.empty_cell %>

    <% t.blank_row %>

    <% t.attribute_cell(:cluster_jobid, :header => "Cluster Job's ID") %>
    <% t.empty_cell %>

    <% t.cell("Cluster Job's Work Directory", :show_width => 2) { @task.full_cluster_workdir || "(Not yet created or erased)" } %>

    <% t.cell("Size of Work Directory") do %>
      <% if @task.share_wd_tid %>
        ( Shared with task: <%= link_to_task_if_accessible(@task.share_wd_tid) %> )
      <% else %>
        <%= colored_pretty_size(@task.cluster_workdir_size, :blank => "Unknown") %>
      <% end %>
    <% end %>

    <% t.cell("Archiving Status") do %>
      <% as = @task.archived_status %>
      <%= colored_archived_status(as) %>
      <% if ! as %>
        (Not archived)
      <% elsif as == :workdir %>
        : Archived on cluster.
      <% else %>
        : Archived as file <%= link_to_userfile_if_accessible(@task.workdir_archive_userfile_id) %>
      <% end %>
    <% end %>

  <% end %>

  <br>



  <fieldset>
    <legend>Parameters</legend>
    <%= build_tabs do |tb| %>
       <%= tb.tab("Summary") do %>
         <% begin %>
           <%= render :partial => task_partial('show_params'), :locals => { :task => @task, :params => @task.params } %>
         <% rescue ActionView::MissingTemplate %>
           <pre>Problem loading summary view (no template provided by task author).</pre>
         <% rescue => ex %>
           <pre>Problem loading summary view (template error).</pre>
           <% Message.send_internal_error_message(nil,"Show summary of params for task #{@task.name}",ex) rescue true %>
         <% end %>
       <% end %>
       <%= tb.tab("Raw") do %>
         <pre><%= @task.params.to_yaml :root => "Params" -%></pre>
       <% end %>
     <% end %>
  </fieldset>

  <br>



  <fieldset>
    <legend>Processing Log</legend>
    <pre><%= @task.getlog -%></pre>
  </fieldset>

  <br>



  <%
     prereqs     = @task.prerequisites || {}
     prereqs     = prereqs.attributes unless prereqs.is_a?(Hash)
     for_setup   = prereqs[:for_setup] || prereqs["for_setup"] || {}
     for_setup   = for_setup.attributes unless for_setup.is_a?(Hash)
     for_postpro = prereqs[:for_post_processing] || prereqs["for_post_processing"] || {}
     for_postpro = for_postpro.attributes unless for_postpro.is_a?(Hash)
  %>

  <% unless for_setup.empty? && for_postpro.empty? %>

    <fieldset>
      <legend>Prerequisites</legend>

      <table class="simple show_task_prerequisites">
        <% if for_setup.size > 0 %>
          <tr>
            <th class="center_align_heading" colspan="2">Setup Prerequisites</td>
          </tr>
          <%= render :partial => 'show_prereqs', :locals  => { :for_this  => for_setup } %>
        <% end %>
        <% if for_postpro.size > 0 %>
          <tr>
            <th class="center_align_heading" colspan="2">Post Processing Prerequisites</td>
          </tr>
          <%= render :partial => 'show_prereqs', :locals  => { :for_this  => for_postpro } %>
        <% end %>
      </table>

    </fieldset>

    <br>

  <% end %>



  <%
    prettystdout = @task.cluster_stdout || "(None)"
    prettystderr = @task.cluster_stderr || "(None)"
    prettyscript = @task.script_text    || "(None)"
  %>

  <fieldset>
    <legend>Cluster Job's Captured Output</legend>

    <% if @task.workdir_archived? %>
      Since this task is archived, outputs aren't available right now.
    <% else %>

      <% if @task.run_number > 1 %>
        <strong>Outputs are available for several runs:</strong>
        <% 1.upto(@task.run_number) do |rn| %>
          <% if rn == @run_number.to_i %>
            <%= rn %>
          <% else %>
            <%= link_to rn.to_s, :controller => :tasks, :action => :show, :id => @task.id, :run_number => rn %>
          <% end %>
        <% end %>
        <p>
      <% end %>

      <%= build_tabs do |tb| %>
        <%= tb.tab("Standard Out") do %>
          <pre class="standard_out"><%= prettystdout -%></pre>
        <% end %>
        <%= tb.tab("Standard Error") do %>
          <pre class="standard_out"><%= prettystderr -%></pre>
        <% end %>
        <% if current_user.has_role?(:admin) %>
          <%= tb.tab("Script") do %>
            <pre class="script_preview"><%= prettyscript %></pre>
          <% end %>
        <% end %>
      <% end %>

    <% end %>

  </fieldset>    

</div>

