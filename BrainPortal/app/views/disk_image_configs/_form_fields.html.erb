
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  
#
-%>

<div class="groupentry">

  <%= hidden_field_tag "disk_image_config[disk_image_bourreau_id]", @disk_image_config.disk_image_bourreau_id %>
  <%= hidden_field_tag "disk_image_config[bourreau_id]", @disk_image_config.bourreau_id %>

  <% if @disk_image_config.disk_image_bourreau_id && @disk_image_config.bourreau_id %>

  <span title="Image id to use on cloud bourreau #{@disk_image_config.bourreau.name}">
    <p><label>Image to use on cloud bourreau <%= @disk_image_config.bourreau.name  %>:</label><br/>
      <%=    
	 bourreau = Bourreau.find(@disk_image_config.bourreau.id)
	 images = Array.new
	 if bourreau.cms_class == "ScirOpenStack"
	   username = bourreau.open_stack_user_name
	   password = bourreau.open_stack_password
	   auth_url = bourreau.open_stack_auth_url
	   tenant_name = bourreau.open_stack_tenant
	   os = OpenStack::Connection.create({:username => username, :api_key=> password, :auth_method=>"password", :auth_url => auth_url, :authtenant_name =>tenant_name, :service_type=>"compute"})
           os.list_images.each do |image|
              images << [image[:name].to_s, image[:id]]

           end
          else
	     if bourreau.cms_class == "ScirAmazon"
	       ec2 = AWS::EC2.new(:access_key_id => bourreau.amazon_ec2_access_key_id, :secret_access_key => bourreau.amazon_ec2_secret_access_key)
	       region = ec2.regions[bourreau.amazon_ec2_region]
               return "Invalid region: #{bourreau.amazon_ec2_region}" unless !region.blank?	
	       ec2 = region
	       region.images.with_owner(:self).each { |image| images << [image.name,image.id] }
             else
               return "Bourreau #{bourreau.name} is not a cloud Bourreau!"
             end
          end
         f.select :disk_image_id, images %>


    </p>
    <p><label>Image type used by VM factory on cloud bourreau <%= @disk_image_config.bourreau.name  %>:</label><br/>
      <%=    
	 bourreau = Bourreau.find(@disk_image_config.bourreau.id)
	 instance_types = Array.new
	 if bourreau.cms_class == "ScirOpenStack"
             instance_types << ScirOpenStack.new.get_available_instance_types
          else
	  if bourreau.cms_class == "ScirAmazon"
	     instance_types << ScirAmazon.new.get_available_instance_types
	  else
             return "Bourreau #{bourreau.name} is not an cloud Bourreau!"
          end
       end
       f.select :default_image_type, instance_types.flatten %>
    </p>
  </span>
  <% end %>

</div>

