
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  
#
-%>

<%
  filter_links = []
  controller = params[:controller].to_sym || :unknown
  (@filter_params["filter_hash"].presence || []).each do |att, val|
    filter = 
    if att == "time_interval"
      s = val[0].to_i
      e = val[1].to_i
      s,e = e,s if e > s
      s_text = pretty_elapsed(s, :num_components  => 1) + " ago"
      s_text = "now"          if s == 0
      s_text = "the big bang" if s > 10.years
      e_text = pretty_elapsed(e, :num_components  => 1) + " ago"
      e_text = "now"          if e == 0
      e_text = "the big bang" if e > 10.years
      text = "Time interval: between #{s_text} and #{e_text}"
      "<span class=\"current_filters_item\">#{h(text).capitalize}</span>"
    elsif att == "critical"
      text = val == '1' ? "Critical" : "Not critical"
      "<span class=\"current_filters_item\">#{text}</span>"
    elsif att == "read"
      text = val == '1' ? "Read" : "Unread"
      "<span class=\"current_filters_item\">#{text}</span>"
    elsif att == "type"
      "<span class=\"current_filters_item\">#{crop_text_to(30, val.constantize.pretty_type)}</span>"
    else
      "<span class=\"current_filters_item\">#{crop_text_to(30, display_filter(model, att, val, {:user  => :login}))}</span>"
    end
    filter += filter_remove_link(delete_icon, att)
    filter_links << filter
  end

  if @filter_params["filter_tags_array"].present?
    current_user.available_tags.find(@filter_params["filter_tags_array"]).each do |tag|
      filter_links << "<span class=\"current_filters_item\">#{crop_text_to(30, "Tag: #{tag.name}")}</span>" + filter_remove_link(delete_icon, tag.id, :parameter  => :filter_tags_array)
    end
  end

  if @filter_params["filter_custom_filters_array"].present?
    current_user.custom_filters.find(@filter_params["filter_custom_filters_array"]).each do |filter|
      filter_links << "<span class=\"current_filters_item\">#{crop_text_to(30, "Custom: #{filter.name}")}</span>" + filter_remove_link(delete_icon, filter.id, :parameter  => :filter_custom_filters_array)
    end
  end
%>

<% if filter_links.size > 0 %>
  <span class="active_label">Active Filters</span> (<%= filter_clear_link 'clear', :class  => "action_link" %>):  
  <span id="current_filters"><%= filter_links.join(", ").html_safe %></span>
<% end %>

