
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  
#
-%>

<% title "File Info" %>
<br>
<%= error_messages_for :userfile, :header_message => "#{@userfile.name} could not be updated." %>
<div class="display_inline_block" style="min-width: 50%">
  <%= show_table(@userfile, :edit_path => userfile_path(@userfile)) do |t| %>

    <% t.edit_cell(:name, :disabled => !@userfile.has_owner_access?(current_user)) do %>
      <%= text_field_tag "userfile[name]", @userfile.name %>
    <% end %>

    <% t.cell("Created at") do %>
      <%= h(to_localtime(@userfile.created_at,:datetime)) %>
      (<%= pretty_elapsed(Time.now - @userfile.created_at, :num_components => 3) %> ago)
    <% end %>

    <% t.cell("Type") do %>
      <%= inline_edit_field(@userfile, :type, userfile_path(@userfile), :content => @userfile.pretty_type, :disabled => !@userfile.has_owner_access?(current_user)) do %>
        <%= select_tag "file_type", options_for_select(@userfile.valid_file_classes.map{ |c| [c.pretty_type, c.name]  }, @userfile.class.name), :class => "submit_onchange" %>
      <% end %>
      <% if @userfile.suggested_file_type &&  @userfile.suggested_file_type != @userfile.class %>
        (<span class="warning">This file appears to be a <%= @userfile.suggested_file_type.pretty_type %>.</span>)
      <% end %>
    <% end %>

    <% t.cell("Modified at") do %>
      <%= to_localtime(@userfile.updated_at,:datetime) %>
      (<%= pretty_elapsed(Time.now - @userfile.updated_at, :num_components => 3) %> ago)
    <% end %>

    <% t.cell("Size") do %>
      <%= colored_format_size(@userfile) %>
      <% if @userfile.size && @userfile.size >= 1_000 -%>
        = <%= @userfile.size %> bytes
      <% end -%>
    <% end %>

    <% t.cell("Data Provider") do %>
      <%= link_to_data_provider_if_accessible(@userfile.data_provider) %>
      ( <%= @userfile.data_provider.class.to_s %> )
      <%= "Cached: " unless @userfile.sync_status.blank? %>
      <% @userfile.sync_status.each do |syncstat| %>
        <%= render :partial => 'syncstatus', :locals => { :syncstat => syncstat } %>
      <% end %>
    <% end %>

    <% t.edit_cell(:user_id, :content => link_to_user_with_tooltip(@userfile.user), :disabled => !(current_user.available_users.include?(@userfile.user) && @userfile.data_provider.allow_file_owner_change?), :header => "Owner") do %>
      <%= user_select("userfile[user_id]", { :selector => @userfile }, :class => "submit_onchange") %>
    <% end %>

    <% t.edit_cell(:group_id, :header => "Project", :content => link_to_group_if_accessible(@userfile.group), :disabled => (!@userfile.has_owner_access?(current_user) || @userfile.format_source_id)) do %>
      <%= group_select 'userfile[group_id]', { :groups => current_user.available_groups, :selector => @userfile.group_id.to_s }, :class => "submit_onchange" %>
    <% end  %>

    <% t.cell("Tags") do %>
      <%= @userfile.get_tags_for_user(current_user).map(&:name).join(", ") %>
      <%= overlay_content_link "(Update)", :class => "action_link", :enclosing_element => "span" do %>
        <% if current_user.available_tags.count > 0 %>
          <%= form_for @userfile, :as => :userfile, :url => { :controller => :userfiles, :action => :update_multiple }, :html => { :method => :put } do |f| %>
            <%= hidden_field_tag "file_ids[]", @userfile.id %>
            <%= hidden_field_tag "redirect_action", userfile_path(@userfile) %>
            <select name="tags[]" multiple="multiple" style="width:150px" >
            <%= options_from_collection_for_select current_user.available_tags, 'id', 'name', @userfile.get_tags_for_user(current_user).map(&:id) %>
            </select>
            <br>
            <%= submit_tag "Update Tags" %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <% t.edit_cell(:group_writable, :header => "Project permission on file", :content => (@userfile.group_writable? ? "Read/Write" : "Read"), :disabled => !@userfile.has_owner_access?(current_user)) do %>
      <%= select_tag("userfile[group_writable]", options_for_select([['Read Only', false],['Read/Write', true]]), :class => "submit_onchange") %>
    <% end %>

    <% t.cell("Parent", :show_width => 2) { link_to_userfile_if_accessible(@userfile.parent) } %>

    <% t.cell("Children", :show_width => 2) do %>
      <%= array_to_table(@userfile.children.sort {|a,b| a.name.casecmp(b.name)}, :table_class => 'simple', :min_data => 3, :cols => 3 ) do |u,r,c| %>
        <%= link_to_userfile_if_accessible(u) %>
      <% end %>
    <% end %>

    <% if current_user.has_role? :admin %>
      <% t.attribute_cell(:cache_full_path, :header => "Local Data Provider (cache) path", :show_width => 2) %>
      <% if @userfile.data_provider.respond_to?(:provider_full_path) %>
        <% t.cell("Remote SSH Data Provider path", :show_width => 2) do %>
          <%= @userfile.data_provider.provider_full_path(@userfile) %>
        <% end %>
      <% end %>
    <% end %>

  <% end %>
  
  <br>
  <%= 
    file_link_table(@userfile, :joins => :data_provider, :conditions => {"data_providers.online" => true}, :access_requested  => :read,
                               :html  => {:class  => "action_link"}) 
  %>
  
  <% if @userfile.can_be_accessed_by?(current_user) && ! @userfile.data_provider.meta[:no_viewers] %>
    <% unless @userfile.is_locally_synced? %>

      <P>

      <% if @sync_status =~ /^To/ %>
        <p>This data is currently being synchronized.</p>
      <% elsif ! (@userfile.data_provider.online?) %>
        <p>This data is not currently synchronized and<BR>
           and its data provider is offline, so its content
           is not viewable.
        </p>
      <% elsif ! (@userfile.data_provider.not_syncable?) %>
        <p>This data is not currently synchronized.<BR>
        Click <%= link_to "here", sync_multiple_userfiles_path(:file_ids => [ @userfile.id ], :back_to_show_page => 1), :method  => :post %>
        to start the synchronization process.<br>
        This will allow you to view displayable contents<% if @userfile.is_a?(FileCollection) %> and extract files from this collection<% end %>.
        </p>
      <% end %>

    <% end %>

  <% end %>


  <P>


  <% unless @userfile.viewers.blank? %>
    <fieldset>
      <legend>Contents</legend>
      <% if @userfile.data_provider.meta[:no_viewers] %>
        (This file cannot be viewed at all as it is stored on Data Provider
        <%= link_to_data_provider_if_accessible(@userfile.data_provider) %>
        which is marked as <strong>non-viewable</strong>)
      <% else %>
        <% if @userfile.viewers && @userfile.viewers.size > 1 %>
          <%= ajax_form_tag display_userfile_path(@userfile), :method  => :get, :target  => "#userfile_viewer", :reset_form  => false do %>
            <%= select_tag "viewer", options_for_select(@userfile.viewers.map{ |v| [v.name, v.name] }, @userfile.class.name.underscore) %>
            <%= submit_tag "Change View" %>
          <% end %>
          <br>
        <% end  %>
        <div id="userfile_viewer">
          <div class="display_userfile">   
            <% if @default_viewer %>
               <%= render :partial  => "userfiles/viewers/#{@default_viewer.partial}" %>
            <% end %>
          </div>
        </div>
      <% end %>
    </fieldset>
  <% end %>

  <P>

  <%= render :partial => "layouts/log_report", :locals  => { :log  => @log, :title => 'File Log' } %>
  
</div>  

